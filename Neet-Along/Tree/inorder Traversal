/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>ans;
        if(root==NULL)
        {
            return ans;
        }
        
        vector<int>left = inorderTraversal(root->left);   //take left and push in array
        ans.insert(ans.end(),left.begin(),left.end());    //push array in ans
  
        ans.push_back(root->val);                             // ans data comes in middle as inorder

        vector<int>right = inorderTraversal(root->right);  //take right and push in array
        ans.insert(ans.end(),right.begin(),right.end());   //take array and push in array

        return ans;                                    //return ans
    }
};
